{"version":3,"sources":["webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/core-js/library/modules/es6.object.keys.js","webpack:///./node_modules/core-js/library/fn/object/define-property.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/core-js/library/fn/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","webpack:///./node_modules/core-js/library/modules/_object-sap.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./src/views/components/samples.vue?6d86","webpack:///src/views/components/samples.vue","webpack:///./src/views/components/samples.vue?988c","webpack:///./src/views/components/samples.vue","webpack:///./node_modules/core-js/library/fn/object/get-own-property-symbols.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-descriptor.js"],"names":["module","exports","__webpack_require__","toObject","$keys","it","$Object","Object","key","desc","defineProperty","$export","S","F","f","$includes","P","includes","el","this","arguments","length","undefined","keys","toIObject","$getOwnPropertyDescriptor","core","fails","KEY","exec","fn","exp","_defineProperty","obj","value","define_property_default","enumerable","configurable","writable","_objectSpread","target","i","source","ownKeys","keys_default","get_own_property_symbols_default","a","concat","filter","sym","get_own_property_descriptor_default","forEach","d","__webpack_exports__","render","_vm","_h","$createElement","_c","_self","staticClass","_v","staticStyle","width","model","callback","$$v","agent_addr","expression","on","click","connect_agent","margin-top","list_sessions","list_history","stop_auto_refresh","close_session","_l","sample","attrs","underline","$event","open_sample","path","_s","type","staticRenderFns","samplesvue_type_script_lang_js_","name","data","profiler_addr","show_history_samples","show_sessions","history_samples_list","sample_sessions_list","show_message","dashboard_timer","sample_info","threads","history_samples","sample_sessions","thread_cpu_time_map","session_id","call_tree_data","id","label","children","flame_graph_svg","flame_graph_data","webSocket","mounted","$webSocket","webSocketInit","$ws","onmessage","computed","sessionOptions","$store","state","sessionThreads","sessionCpuTimes","sessionFlameGraph","sampleInfo","sessionSampleInfo","exampleInfo","historySamples","created","getHistorySamples","methods","webSocketOnOpen","console","log","webSocketOnClose","webSocketOnError","event","json","JSON","parse","success","result","assign","sessionId","commit","cmd","threadSessionId","sample_data_dir","threadsArray","item","threadsInfo","threadSampleInfo","objectSpread","push","sessionSampleInfoArray","sessionSample","start_auto_refresh","sessionCpuTimeArray","cpuTimeArray","cpuTimeData","item1","thread_cpu_times","cpuTimeInfo","graphInfoList","flameGraphList","threadId","thread_id","flameGraphData","graphInfo","clear_session","request","options","webSocketSendMessage","stringify","connected","_this","sessionOption","do_refresh","setInterval","clearInterval","update_dashboard","update_cpu_time","thread_ids","graph_width","sample_interval","start_time","record_start_time","end_time","last_record_time","ratio","Math","ceil","floor","unit_time_ms","_this2","setTimeout","active_session","watch","components_samplesvue_type_script_lang_js_","component","componentNormalizer","getOwnPropertySymbols","getOwnPropertyDescriptor"],"mappings":"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","file":"static/js/chunk-6df38a20.a7ebdf04.js","sourcesContent":["module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","module.exports = require(\"core-js/library/fn/object/define-property\");","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","module.exports = require(\"core-js/library/fn/object/keys\");","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"samples\"},[_c('div',[_c('p',[_vm._v(\"Start Sample:\\n            \"),_c('el-input',{staticStyle:{\"width\":\"300px\"},model:{value:(_vm.agent_addr),callback:function ($$v) {_vm.agent_addr=$$v},expression:\"agent_addr\"}}),_c('el-button',{staticClass:\"ml10\",on:{\"click\":_vm.connect_agent}},[_vm._v(\"Connect\")])],1)]),_c('div',{staticStyle:{\"margin-top\":\"10px\"}},[_c('el-button',{on:{\"click\":_vm.list_sessions}},[_vm._v(\"Sessions\")]),_c('el-button',{on:{\"click\":_vm.list_history}},[_vm._v(\"History\")]),_c('el-button',{on:{\"click\":_vm.stop_auto_refresh}},[_vm._v(\"Stop Refresh\")]),_c('el-button',{on:{\"click\":_vm.close_session}},[_vm._v(\"Close\")]),_c('div',{staticStyle:{\"margin-top\":\"10px\"}},[_c('p',[_vm._v(\"History samples:\")]),_c('ul',{staticClass:\"list-content\"},_vm._l((_vm.history_samples_list),function(sample){return _c('li',{staticClass:\"list-item\"},[_c('el-link',{attrs:{\"underline\":false},on:{\"click\":function($event){return _vm.open_sample(sample.path)}}},[_vm._v(\"[\"+_vm._s(sample.type)+\"]\"+_vm._s(sample.path))])],1)}),0)])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"samples\">\r\n        <div>\r\n            <p>Start Sample:\r\n                <el-input v-model=\"agent_addr\" style=\"width: 300px\">\r\n                    <!--<template slot=\"append\" @click=\"connect_agent\">Connect</template>-->\r\n                </el-input>\r\n                <el-button class=\"ml10\" @click=\"connect_agent\">Connect</el-button>\r\n            </p>\r\n        </div>\r\n        <div style=\"margin-top: 10px\">\r\n            <el-button @click=\"list_sessions\">Sessions</el-button>\r\n            <el-button @click=\"list_history\">History</el-button>\r\n            <el-button @click=\"stop_auto_refresh\">Stop Refresh</el-button>\r\n            <el-button @click=\"close_session\">Close</el-button>\r\n\r\n            <div style=\"margin-top: 10px\">\r\n                <p>History samples:</p>\r\n                <ul class=\"list-content\">\r\n                    <li class=\"list-item\" v-for=\"sample in history_samples_list\">\r\n                        <el-link :underline=\"false\" @click='open_sample(sample.path)'>[{{sample.type}}]{{sample.path}}</el-link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <!--<div class=\"list-div\" style=\"margin-top: 10px\">\r\n                <p>Sample sessions:</p>\r\n                <ul class=\"list-content\">\r\n                    <li class=\"list-item\" v-for=\"session in data.sample_sessions\"\r\n                        @click=\"active_session(session.session_id, session.type)\">\r\n                        [{{session.type}}]{{session.session_id}}\r\n                    </li>\r\n                </ul>\r\n            </div>-->\r\n        </div>\r\n\r\n        <!--<div class=\"message\" v-show=\"show_message\">\r\n            &lt;!&ndash;\t\t\t\t<p>操作指令：{{profiler.data.cmd}}</p>&ndash;&gt;\r\n            <p>错误信息：{{data.message}}</p>\r\n        </div>\r\n        <div style=\"margin-top: 10px\">\r\n            <p>Sample Session: {{data.session_id}} ({{data.type}})</p>\r\n            <p>Sample Start Time: {{data.sample_info.sample_start_time}}</p>\r\n            <p>Record Start Time: {{data.sample_info.record_start_time}}</p>\r\n            <p>Last Record Time: {{data.sample_info.last_record_time}}</p>\r\n            <p>Record Duration: {{(data.sample_info.last_record_time - data.sample_info.record_start_time)/1000}}s</p>\r\n        </div>-->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'samples',\r\n        data() {\r\n            return {\r\n                agent_addr: \"localhost:3333\",\r\n                profiler_addr: \"localhost:3344\",\r\n                show_history_samples: false,\r\n                show_sessions: false,\r\n                history_samples_list: [],\r\n                sample_sessions_list: [],\r\n                show_message: false,\r\n                dashboard_timer: null,\r\n\r\n                data: {\r\n                    sample_info: {},\r\n                    threads: [],\r\n                    history_samples: [],\r\n                    sample_sessions: [],\r\n                    thread_cpu_time_map: {},\r\n                    session_id: \"\",\r\n                    type: \"\",\r\n                    call_tree_data: [{\r\n                        id: 1,\r\n                        label: '方法调用',\r\n                        children: [{\r\n                            id: 4,\r\n                            label: '二级 1-1'\r\n                        }]\r\n                    }],\r\n\r\n                    flame_graph_svg: \"\",\r\n                    flame_graph_data: \"\"\r\n                },\r\n\r\n                webSocket:\"\",\r\n            }\r\n        },\r\n        mounted() {\r\n          //this.webSocketInit();\r\n            this.$webSocket.webSocketInit();\r\n            this.$ws.onmessage = this.onmessage;\r\n            //this.$ws.onopen = this.webSocketOnOpen();\r\n            //this.$ws.onclose = this.webSocketOnClose();\r\n            //this.$ws.onerror = this.webSocketOnError();\r\n        },\r\n        computed: {\r\n            sessionOptions() {\r\n                return this.$store.state.sessionOptions;\r\n            },\r\n            sessionThreads() {\r\n                return this.$store.state.sessionThreads;\r\n            },\r\n            sessionCpuTimes() {\r\n                return this.$store.state.sessionCpuTimes;\r\n            },\r\n            sessionFlameGraph() {\r\n                return this.$store.state.sessionFlameGraph;\r\n            },\r\n            sampleInfo() {\r\n                return this.$store.state.sampleInfo;\r\n            },\r\n            sessionSampleInfo() {\r\n                return this.$store.state.sessionSampleInfo;\r\n            },\r\n            exampleInfo() {\r\n                return this.$store.state.exampleInfo;\r\n            },\r\n            historySamples() {\r\n                return this.$store.state.historySamples;\r\n            },\r\n        },\r\n        created() {\r\n            this.getHistorySamples();\r\n        },\r\n        methods: {\r\n            getHistorySamples() {\r\n                if (this.historySamples) {\r\n                    this.history_samples_list = this.historySamples;\r\n                }\r\n            },\r\n            /*websocket*/\r\n            webSocketOnOpen(){\r\n                console.log(\"websocket建立连接\");\r\n            },\r\n            webSocketOnClose(){\r\n                console.log(\"websocket销毁连接\");\r\n            },\r\n            webSocketOnError(){\r\n                console.log(\"websocket连接失败\");\r\n            },\r\n            onmessage(event){\r\n                console.log('websocket接收到消息：', event);\r\n                var json = JSON.parse(event.data);\r\n                var success = (json.result == \"success\");\r\n                Object.assign(this.data, json.data)\r\n                this.show_message = !success;\r\n                if (!success) {\r\n                    this.stop_auto_refresh();\r\n                }\r\n\r\n                let sessionId = json.data.session_id\r\n                this.$store.commit('example_info', json.data);\r\n                switch (json.cmd) {\r\n                    case \"dashboard\":\r\n                        let threadSessionId = json.data.sample_info.sample_data_dir;\r\n                        if (json.data.threads) {\r\n                            let threadsArray = this.sessionThreads.filter(item => {\r\n                                if (item.sessionId != threadSessionId) {\r\n                                    return item;\r\n                                }\r\n                            });\r\n\r\n                            let threadsInfo = {\r\n                                sessionId: threadSessionId,\r\n                                threads: json.data.threads,\r\n                                threadSampleInfo: {...json.data.sample_info}\r\n                            };\r\n                            threadsArray.push(threadsInfo);\r\n                            this.$store.commit('session_threads', threadsArray);\r\n                        }\r\n\r\n                        let sessionSampleInfoArray = this.sessionSampleInfo.filter(item => {\r\n                            if (item.sessionId != threadSessionId) {\r\n                                return item;\r\n                            }\r\n                        });\r\n                        let sessionSampleInfo = {sessionId: threadSessionId, sessionSample: json.data.sample_info};\r\n                        sessionSampleInfoArray.push(sessionSampleInfo)\r\n\r\n                        this.$store.commit('session_sample_info', sessionSampleInfoArray);\r\n                        this.$store.commit('sample_info', json.data.sample_info);\r\n                        break;\r\n                    case \"open_sample\":\r\n                        this.start_auto_refresh();\r\n                        break;\r\n                    case \"connect_agent\":\r\n                        this.start_auto_refresh();\r\n                        break;\r\n                    case \"history_samples\":\r\n                        console.log('json.data.history_samples', json.data.history_samples)\r\n                        if (json.data.history_samples) {\r\n                            this.$store.commit('history_samples', json.data.history_samples);\r\n                        }\r\n                        this.show_history_samples = true;\r\n                        break;\r\n                    case \"list_sessions\":\r\n                        // session tag\r\n                        if (json.data.sample_sessions) {\r\n                            this.$store.commit('session_options', json.data.sample_sessions)\r\n                        }\r\n                        this.show_sessions = true;\r\n                        break;\r\n                    case \"cpu_time\":\r\n                        let sessionCpuTimeArray = [];\r\n                        let cpuTimeArray = this.sessionCpuTimes.filter(item => {\r\n                            if (item.sessionId != sessionId) {\r\n                                return item;\r\n                            } else {\r\n                                item.cpuTimeData.forEach(item1 => {\r\n                                    if (!sessionCpuTimeArray.includes(item1.id)) {\r\n                                        sessionCpuTimeArray.push(item1);\r\n                                    }\r\n                                })\r\n                            }\r\n                        });\r\n                        json.data.thread_cpu_times.forEach(item => {\r\n                            if (!sessionCpuTimeArray.includes(item.id)) {\r\n                                sessionCpuTimeArray.push(item);\r\n                            }\r\n                        })\r\n\r\n                        let cpuTimeInfo = {sessionId: sessionId, cpuTimeData: sessionCpuTimeArray};\r\n                        cpuTimeArray.push(cpuTimeInfo);\r\n\r\n                        this.$store.commit('session_cpu_times', cpuTimeArray);\r\n                        break;\r\n                    case \"call_tree\":\r\n                        break;\r\n                    case \"flame_graph\":\r\n                        if (json.data.flame_graph_data) {\r\n                            let graphInfoList = [];\r\n                            let flameGraphList = this.sessionFlameGraph.filter(item => {\r\n                                if (item.sessionId != sessionId) {\r\n                                    return item;\r\n                                } else {\r\n                                    item.flameGraphList.filter(item1 => {\r\n                                        if (item1.threadId != json.data.thread_id) {\r\n                                            graphInfoList.push(item1);\r\n                                        }\r\n                                    })\r\n                                }\r\n                            });\r\n\r\n                            graphInfoList.push({threadId: json.data.thread_id, flameGraphData: json.data});\r\n                            let graphInfo = {\r\n                                sessionId: sessionId,\r\n                                flameGraphList: graphInfoList\r\n                            };\r\n                            flameGraphList.push(graphInfo);\r\n                            this.$store.commit('session_flame_graph', flameGraphList)\r\n                        }\r\n                        //profiler.data.flame_graph_svg=\"data:image/svg+xml;utf8,\"+json.data.flame_graph_data.replace(/<\\?xml.*?\\>.*\\<!DOCTYPE.*\\<svg/, \"<svg\");\r\n                        break;\r\n                    default:\r\n                        console.log(\"unknown message: \", json);\r\n                        break;\r\n                }\r\n\r\n            },\r\n            /*webSocketSendMessage(msg){\r\n                this.webSocket.send(msg);\r\n                console.log(\"websocket发送消息：\" + msg);\r\n            },*/\r\n            connect_agent: function () {\r\n                this.clear_session();\r\n                var request = {\r\n                    \"cmd\": \"connect_agent\",\r\n                    \"options\": {\r\n                        \"agent_addr\": this.agent_addr\r\n                    }\r\n                };\r\n                this.$webSocket.webSocketSendMessage(JSON.stringify(request));\r\n                this.connected = true;\r\n            },\r\n            close_session() {\r\n                this.connected = false;\r\n                var request = {\r\n                    \"cmd\": \"close_session\",\r\n                    \"options\": {\r\n                        \"session_id\": this.sampleInfo.sample_data_dir\r\n                    }\r\n                };\r\n                this.$webSocket.webSocketSendMessage(JSON.stringify(request));\r\n                let sessionOption = this.sessionOptions.filter((item => {\r\n                    if (item.session_id != this.sampleInfo.sample_data_dir) {\r\n                        return item;\r\n                    }\r\n                }))\r\n                this.$store.commit('session_options', sessionOption);\r\n            },\r\n            clear_session: function () {\r\n                this.stop_auto_refresh();\r\n                this.data.session_id = \"\";\r\n                this.data.threads = [];\r\n                this.data.sample_info = {};\r\n                this.data.thread_cpu_time_map = {};\r\n            },\r\n            list_sessions() {\r\n                this.show_sessions = true;\r\n                this.show_history_samples = false;\r\n                this.$webSocket.webSocketSendMessage(JSON.stringify({\r\n                    \"cmd\": \"list_sessions\"\r\n                }))\r\n            },\r\n            list_history: function () {\r\n                this.show_sessions = false;\r\n                this.show_history_samples = true;\r\n                this.$webSocket.webSocketSendMessage(JSON.stringify({\r\n                    \"cmd\": \"history_samples\"\r\n                }))\r\n            },\r\n            start_auto_refresh() {\r\n                if (this.dashboard_timer == null) {\r\n                    this.do_refresh();\r\n                    if(this.data.type == \"attach\") {\r\n                        this.dashboard_timer = setInterval(function () {\r\n                            this.do_refresh();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            },\r\n            stop_auto_refresh() {\r\n                if (this.dashboard_timer != null) {\r\n                    clearInterval(this.dashboard_timer);\r\n                    this.dashboard_timer = null;\r\n                }\r\n            },\r\n            update_dashboard(){\r\n                console.log(\"send request: get_dashboard\");\r\n                this.$webSocket.webSocketSendMessage(JSON.stringify({\r\n                    \"cmd\": \"dashboard\",\r\n                    \"options\": {\r\n                        \"session_id\": this.data.session_id\r\n                    }\r\n                }));\r\n            },\r\n            update_cpu_time(){\r\n                var thread_ids = [];\r\n                for ( var i=0;i<this.data.threads.length;i++) {\r\n                    thread_ids.push(this.data.threads[i].id);\r\n                }\r\n                var graph_width = 900;\r\n                var sample_interval = this.data.sample_info.sample_interval;\r\n                var start_time = this.data.sample_info.record_start_time;\r\n                var end_time = this.data.sample_info.last_record_time;\r\n                var ratio = Math.ceil((end_time - start_time) / graph_width / sample_interval);\r\n                if (ratio > 10 ){\r\n                    ratio = Math.floor(ratio/10)*10;\r\n                }\r\n                var unit_time_ms = ratio * sample_interval;\r\n                this.data.sample_info.unit_time_ms = unit_time_ms;\r\n\r\n                var request = {\r\n                    cmd: \"cpu_time\",\r\n                    options: {\r\n                        \"session_id\": this.data.session_id,\r\n                        \"thread_ids\": thread_ids,\r\n                        \"start_time\": start_time,\r\n                        \"end_time\": end_time,\r\n                        \"unit_time_ms\": unit_time_ms\r\n                    }\r\n                };\r\n                this.$webSocket.webSocketSendMessage(JSON.stringify(request));\r\n            },\r\n            do_refresh(){\r\n                if (this.data.session_id == \"\"){\r\n                    return;\r\n                }\r\n                this.update_dashboard();\r\n                setTimeout(() => {\r\n                    this.update_cpu_time();\r\n                }, 500);\r\n            },\r\n            open_sample: function (sample_data_dir) {\r\n                this.clear_session();\r\n                var request = {\r\n                    \"cmd\": \"open_sample\",\r\n                    \"options\": {\r\n                        \"sample_data_dir\": sample_data_dir\r\n                    }\r\n                };\r\n                this.$webSocket.webSocketSendMessage(JSON.stringify(request));\r\n                this.list_sessions()\r\n            },\r\n            active_session:function (session_id, type) {\r\n                this.clear_session();\r\n                this.data.session_id = session_id;\r\n                this.data.type = type;\r\n                this.start_auto_refresh();\r\n            },\r\n        },\r\n        watch: {\r\n            historySamples() {\r\n                this.history_samples_list = this.historySamples;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./samples.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./samples.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./samples.vue?vue&type=template&id=ba5dd5d0&scoped=true&\"\nimport script from \"./samples.vue?vue&type=script&lang=js&\"\nexport * from \"./samples.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ba5dd5d0\",\n  null\n  \n)\n\nexport default component.exports","require('../../modules/es6.symbol');\nmodule.exports = require('../../modules/_core').Object.getOwnPropertySymbols;\n","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n"],"sourceRoot":""}