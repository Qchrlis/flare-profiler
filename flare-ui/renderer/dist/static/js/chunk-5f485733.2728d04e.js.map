{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/es6.array.is-array.js","webpack:///./node_modules/core-js/library/modules/_create-property.js","webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./node_modules/core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/core-js/library/modules/_iter-detect.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/core-js/library/modules/es6.array.from.js","webpack:///./node_modules/core-js/library/fn/is-iterable.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/from.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/library/modules/core.is-iterable.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/core-js/library/modules/_iter-call.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/core-js/library/fn/array/from.js","webpack:///./src/views/components/samples.vue?88a6","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js","webpack:///src/views/components/samples.vue","webpack:///./src/views/components/samples.vue?988c","webpack:///./src/views/components/samples.vue","webpack:///./node_modules/core-js/library/fn/array/is-array.js"],"names":["$export","__webpack_require__","S","isArray","$defineProperty","createDesc","module","exports","object","index","value","f","context","INCLUDES","P","F","includes","searchString","this","indexOf","arguments","length","undefined","Iterators","ITERATOR","ArrayProto","Array","prototype","it","cof","TAG","ARG","tryGet","key","e","O","T","B","Object","callee","SAFE_CLOSING","riter","from","exec","skipClosing","safe","arr","iter","next","done","MATCH","KEY","re","ctx","toObject","call","isArrayIter","toLength","createProperty","getIterFn","arrayLike","result","step","iterator","C","aLen","mapfn","mapping","iterFn","$includes","el","classof","getIteratorMethod","isIterable","hasOwnProperty","isObject","isRegExp","anObject","fn","entries","ret","defined","that","NAME","TypeError","String","render","_vm","_h","$createElement","_c","_self","staticClass","_v","staticStyle","width","model","callback","$$v","agent_addr","expression","on","click","connect_agent","margin-top","list_sessions","list_history","stop_auto_refresh","close_session","directives","name","rawName","_l","data","sample","$event","open_sample","path","_s","type","session","active_session","session_id","message","sample_info","sample_start_time","record_start_time","last_record_time","staticRenderFns","_arrayWithoutHoles","is_array_default","i","arr2","_iterableToArray","is_iterable_default","toString","from_default","_nonIterableSpread","_toConsumableArray","samplesvue_type_script_lang_js_","profiler_addr","show_history_samples","show_sessions","history_samples_list","sample_sessions_list","show_message","dashboard_timer","threads","history_samples","sample_sessions","thread_cpu_time_map","call_tree_data","id","label","children","flame_graph_svg","flame_graph_data","webSocket","mounted","$webSocket","webSocketInit","$ws","onmessage","computed","sessionOptions","$store","state","sessionThreads","sessionCpuTimes","created","methods","webSocketOnOpen","console","log","webSocketOnClose","webSocketOnError","event","json","JSON","parse","success","assign","commit","cmd","threadsMap","set","sample_data_dir","start_auto_refresh","sessionId","cpuTimeMap","cpuTimeList","has","cpuTimeList1","get","thread_cpu_times","forEach","item1","push","on_cpu_time_result","clear_session","request","options","webSocketSendMessage","stringify","connected","do_refresh","setInterval","clearInterval","update_dashboard","update_cpu_time","thread_ids","graph_width","sample_interval","start_time","end_time","ratio","Math","ceil","floor","unit_time_ms","_this","setTimeout","thread","total_cpu_time","components_samplesvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"static/js/chunk-5f485733.2728d04e.js","sourcesContent":["// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","module.exports = require(\"core-js/library/fn/array/from\");","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n","module.exports = require(\"core-js/library/fn/array/is-array\");","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","module.exports = require(\"core-js/library/fn/is-iterable\");","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"samples\"},[_c('div',[_c('p',[_vm._v(\"Start Sample:\\n            \"),_c('el-input',{staticStyle:{\"width\":\"300px\"},model:{value:(_vm.agent_addr),callback:function ($$v) {_vm.agent_addr=$$v},expression:\"agent_addr\"}}),_c('el-button',{staticClass:\"ml10\",on:{\"click\":_vm.connect_agent}},[_vm._v(\"Connect\")])],1)]),_c('div',{staticStyle:{\"margin-top\":\"10px\"}},[_c('el-button',{on:{\"click\":_vm.list_sessions}},[_vm._v(\"Sessions\")]),_c('el-button',{on:{\"click\":_vm.list_history}},[_vm._v(\"History\")]),_c('el-button',{on:{\"click\":_vm.stop_auto_refresh}},[_vm._v(\"Stop Refresh\")]),_c('el-button',{on:{\"click\":_vm.close_session}},[_vm._v(\"Close\")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_history_samples),expression:\"show_history_samples\"}]},[_c('p',[_vm._v(\"History samples:\")]),_c('ul',{staticClass:\"list-content\"},_vm._l((_vm.data.history_samples),function(sample){return _c('li',{staticClass:\"list-item\",on:{\"click\":function($event){return _vm.open_sample(sample.path)}}},[_vm._v(\"[\"+_vm._s(sample.type)+\"]\"+_vm._s(sample.path)+\"\\n                \")])}),0)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_sessions),expression:\"show_sessions\"}],staticClass:\"list-div\"},[_c('p',[_vm._v(\"Sample sessions:\")]),_c('ul',{staticClass:\"list-content\"},_vm._l((_vm.data.sample_sessions),function(session){return _c('li',{staticClass:\"list-item\",on:{\"click\":function($event){return _vm.active_session(session.session_id, session.type)}}},[_vm._v(\"\\n                    [\"+_vm._s(session.type)+\"]\"+_vm._s(session.session_id)+\"\\n                \")])}),0)])],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_message),expression:\"show_message\"}],staticClass:\"message\"},[_c('p',[_vm._v(\"错误信息：\"+_vm._s(_vm.data.message))])]),_c('div',{staticStyle:{\"margin-top\":\"10px\"}},[_c('p',[_vm._v(\"Sample Session: \"+_vm._s(_vm.data.session_id)+\" (\"+_vm._s(_vm.data.type)+\")\")]),_c('p',[_vm._v(\"Sample Start Time: \"+_vm._s(_vm.data.sample_info.sample_start_time))]),_c('p',[_vm._v(\"Record Start Time: \"+_vm._s(_vm.data.sample_info.record_start_time))]),_c('p',[_vm._v(\"Last Record Time: \"+_vm._s(_vm.data.sample_info.last_record_time))]),_c('p',[_vm._v(\"Record Duration: \"+_vm._s((_vm.data.sample_info.last_record_time - _vm.data.sample_info.record_start_time)/1000)+\"s\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","import _Array$from from \"../../core-js/array/from\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","<template>\n    <div class=\"samples\">\n        <div>\n            <p>Start Sample:\n                <el-input v-model=\"agent_addr\" style=\"width: 300px\">\n                    <!--<template slot=\"append\" @click=\"connect_agent\">Connect</template>-->\n                </el-input>\n                <el-button class=\"ml10\" @click=\"connect_agent\">Connect</el-button>\n            </p>\n        </div>\n        <div style=\"margin-top: 10px\">\n            <el-button @click=\"list_sessions\">Sessions</el-button>\n            <el-button @click=\"list_history\">History</el-button>\n            <el-button @click=\"stop_auto_refresh\">Stop Refresh</el-button>\n            <el-button @click=\"close_session\">Close</el-button>\n\n            <div v-show=\"show_history_samples\">\n                <p>History samples:</p>\n                <ul class=\"list-content\">\n                    <li class=\"list-item\" v-for=\"sample in data.history_samples\"\n                        @click='open_sample(sample.path)'>[{{sample.type}}]{{sample.path}}\n                    </li>\n                </ul>\n            </div>\n            <div class=\"list-div\" v-show=\"show_sessions\">\n                <p>Sample sessions:</p>\n                <ul class=\"list-content\">\n                    <li class=\"list-item\" v-for=\"session in data.sample_sessions\"\n                        @click=\"active_session(session.session_id, session.type)\">\n                        [{{session.type}}]{{session.session_id}}\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n        <div class=\"message\" v-show=\"show_message\">\n            <!--\t\t\t\t<p>操作指令：{{profiler.data.cmd}}</p>-->\n            <p>错误信息：{{data.message}}</p>\n        </div>\n        <div style=\"margin-top: 10px\">\n            <p>Sample Session: {{data.session_id}} ({{data.type}})</p>\n            <p>Sample Start Time: {{data.sample_info.sample_start_time}}</p>\n            <p>Record Start Time: {{data.sample_info.record_start_time}}</p>\n            <p>Last Record Time: {{data.sample_info.last_record_time}}</p>\n            <p>Record Duration: {{(data.sample_info.last_record_time - data.sample_info.record_start_time)/1000}}s</p>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'samples',\n        data() {\n            return {\n                agent_addr: \"localhost:3333\",\n                profiler_addr: \"localhost:3344\",\n                show_history_samples: false,\n                show_sessions: false,\n                history_samples_list: [],\n                sample_sessions_list: [],\n                show_message: false,\n                dashboard_timer: null,\n\n                data: {\n                    sample_info: {},\n                    threads: [],\n                    history_samples: [],\n                    sample_sessions: [],\n                    thread_cpu_time_map: {},\n                    session_id: \"\",\n                    type: \"\",\n                    call_tree_data: [{\n                        id: 1,\n                        label: '方法调用',\n                        children: [{\n                            id: 4,\n                            label: '二级 1-1'\n                        }]\n                    }],\n\n                    flame_graph_svg: \"\",\n                    flame_graph_data: \"\"\n                },\n\n                webSocket:\"\",\n            }\n        },\n        mounted() {\n          //this.webSocketInit();\n            this.$webSocket.webSocketInit();\n            this.$ws.onmessage = this.onmessage;\n            //this.$ws.onopen = this.webSocketOnOpen();\n            //this.$ws.onclose = this.webSocketOnClose();\n            //this.$ws.onerror = this.webSocketOnError();\n        },\n        computed: {\n            sessionOptions() {\n                return this.$store.state.sessionOptions;\n            },\n            sessionThreads() {\n                return this.$store.state.sessionThreads;\n            },\n            sessionCpuTimes() {\n                return this.$store.state.sessionCpuTimes;\n            }\n        },\n        created() {\n        },\n        methods: {\n            /*websocket*/\n            webSocketOnOpen(){\n                console.log(\"websocket建立连接\");\n            },\n            webSocketOnClose(){\n                console.log(\"websocket销毁连接\");\n                //this.reconnectWebSocket();\n            },\n            webSocketOnError(){\n                console.log(\"websocket连接失败\");\n                //this.reconnectWebSocket();\n            },\n            onmessage(event){\n                console.log('websocket接收到消息：', event);\n                var json = JSON.parse(event.data);\n                var success = (json.result == \"success\");\n                Object.assign(this.data, json.data)\n                this.show_message = !success;\n                if (!success) {\n                    this.stop_auto_refresh();\n                }\n\n                this.$store.commit('example_info', json.data);\n                switch (json.cmd) {\n                    case \"dashboard\":\n                        //profiler.on_dashboard_result(json.data);\n                        // smany\n                        if (json.data.threads) {\n                            let threadsMap = this.sessionThreads;\n                            threadsMap.set(json.data.sample_info.sample_data_dir, json.data.threads);\n                            this.$store.commit('session_threads', threadsMap);\n                        }\n                        this.$store.commit('sample_info', json.data.sample_info);\n                        break;\n                    case \"open_sample\":\n                        this.start_auto_refresh();\n                        break;\n                    case \"connect_agent\":\n                        this.start_auto_refresh();\n                        break;\n                    case \"history_samples\":\n                        //this.history_samples_list = json.data.history_samples;\n                        this.show_history_samples = true;\n                        break;\n                    case \"list_sessions\":\n                        // session tag\n                        this.$store.commit('session_options', json.data.sample_sessions)\n                        //this.sample_sessions_list = json.data.sample_sessions;\n                        this.show_sessions = true;\n                        break;\n                    case \"cpu_time\":\n                        //debugger\n                        let sessionId = json.data.session_id\n                        let cpuTimeMap = this.sessionCpuTimes;\n                        let cpuTimeList = [];\n                        if (cpuTimeMap.has(sessionId)) {\n                            let cpuTimeList1 = cpuTimeMap.get(sessionId);\n\n                            cpuTimeList = [...cpuTimeList1]\n                            // cpuTimeList1.forEach(item => {\n                            //     cpuTimeList.push(item);\n                            // })\n\n                            json.data.thread_cpu_times.forEach(item1 => {\n                                console.log('!cpuTimeList.includes(item1.id)', !cpuTimeList.includes(item1.id))\n                                if (!cpuTimeList.includes(item1.id)) {\n                                    cpuTimeList.push(item1);\n                                }\n                                console.log('cpuTimeList', cpuTimeList);\n                            })\n                        } else {\n                            json.data.thread_cpu_times.forEach(item1 => {\n                                cpuTimeList.push(item1);\n                            })\n                        }\n\n                        cpuTimeMap.set(sessionId, cpuTimeList);\n                        this.$store.commit('session_cpu_times', cpuTimeMap);\n                        this.on_cpu_time_result(json.data);\n                        break;\n                    case \"call_tree\":\n                        break;\n                    case \"flame_graph\":\n                        console.log('接收到flame_graph消息，内容：', json.data)\n                        if (json.data.flame_graph_data) {\n                            this.$store.commit('session_flame_graph', json.data)\n                            console.log('json.data.flame_graph_data', json.data.flame_graph_data)\n                        }\n                        //profiler.data.flame_graph_svg=\"data:image/svg+xml;utf8,\"+json.data.flame_graph_data.replace(/<\\?xml.*?\\>.*\\<!DOCTYPE.*\\<svg/, \"<svg\");\n                        break;\n                    default:\n                        console.log(\"unknown message: \", json);\n                        break;\n                }\n\n            },\n            /*webSocketSendMessage(msg){\n                this.webSocket.send(msg);\n                console.log(\"websocket发送消息：\" + msg);\n            },*/\n            connect_agent: function () {\n                this.clear_session();\n                var request = {\n                    \"cmd\": \"connect_agent\",\n                    \"options\": {\n                        \"agent_addr\": this.agent_addr\n                    }\n                };\n                this.$webSocket.webSocketSendMessage(JSON.stringify(request));\n                this.connected = true;\n            },\n            close_session() {\n                this.connected = false;\n                var request = {\n                    \"cmd\": \"close_session\",\n                    \"options\": {\n                        \"session_id\": this.data.session_id\n                    }\n                };\n                this.$webSocket.webSocketSendMessage(JSON.stringify(request));\n            },\n            clear_session: function () {\n                this.stop_auto_refresh();\n                this.data.session_id = \"\";\n                this.data.threads = [];\n                this.data.sample_info = {};\n                this.data.thread_cpu_time_map = {};\n            },\n            list_sessions() {\n                this.show_sessions = true;\n                this.show_history_samples = false;\n                this.$webSocket.webSocketSendMessage(JSON.stringify({\n                    \"cmd\": \"list_sessions\"\n                }))\n            },\n            list_history: function () {\n                this.show_sessions = false;\n                this.show_history_samples = true;\n                this.$webSocket.webSocketSendMessage(JSON.stringify({\n                    \"cmd\": \"history_samples\"\n                }))\n            },\n            start_auto_refresh() {\n                if (this.dashboard_timer == null) {\n                    this.do_refresh();\n                    if(this.data.type == \"attach\") {\n                        this.dashboard_timer = setInterval(function () {\n                            this.do_refresh();\n                        }, 2000);\n                    }\n                }\n            },\n            stop_auto_refresh() {\n                if (this.dashboard_timer != null) {\n                    clearInterval(this.dashboard_timer);\n                    this.dashboard_timer = null;\n                }\n            },\n            update_dashboard(){\n                console.log(\"send request: get_dashboard\");\n                this.$webSocket.webSocketSendMessage(JSON.stringify({\n                    \"cmd\": \"dashboard\",\n                    \"options\": {\n                        \"session_id\": this.data.session_id\n                    }\n                }));\n            },\n            update_cpu_time(){\n                var thread_ids = [];\n                for ( var i=0;i<this.data.threads.length;i++) {\n                    thread_ids.push(this.data.threads[i].id);\n                }\n                var graph_width = 900;\n                var sample_interval = this.data.sample_info.sample_interval;\n                var start_time = this.data.sample_info.record_start_time;\n                var end_time = this.data.sample_info.last_record_time;\n                var ratio = Math.ceil((end_time - start_time) / graph_width / sample_interval);\n                if (ratio > 10 ){\n                    ratio = Math.floor(ratio/10)*10;\n                }\n                var unit_time_ms = ratio * sample_interval;\n                this.data.sample_info.unit_time_ms = unit_time_ms;\n\n                var request = {\n                    cmd: \"cpu_time\",\n                    options: {\n                        \"session_id\": this.data.session_id,\n                        \"thread_ids\": thread_ids,\n                        \"start_time\": start_time,\n                        \"end_time\": end_time,\n                        \"unit_time_ms\": unit_time_ms\n                    }\n                };\n                this.$webSocket.webSocketSendMessage(JSON.stringify(request));\n                // console.log(\"update_cpu_time: \", request);\n            },\n            do_refresh(){\n                if (this.data.session_id == \"\"){\n                    return;\n                }\n                this.update_dashboard();\n                setTimeout(() => {\n                    this.update_cpu_time();\n                }, 500);\n            },\n            open_sample: function (sample_data_dir) {\n                this.clear_session();\n                var request = {\n                    \"cmd\": \"open_sample\",\n                    \"options\": {\n                        \"sample_data_dir\": sample_data_dir\n                    }\n                };\n                this.$webSocket.webSocketSendMessage(JSON.stringify(request));\n                //debugger\n                //this.onmessage();\n            },\n            on_cpu_time_result(data){\n                console.log('data', data)\n                console.log('data.thread_cpu_times', data.thread_cpu_times)\n                var sess_start_time = this.data.sample_info.record_start_time;\n                var sess_end_time = this.data.sample_info.last_record_time;\n                var unit_time_ms = this.data.sample_info.unit_time_ms;\n\n                for (let i = 0; i < data.thread_cpu_times.length; i++) {\n                    let thread = data.thread_cpu_times[i];\n                    if (thread.total_cpu_time > 0) {\n                        //let ts_data = fill_ts_data(thread.ts_data, thread.start_time, thread.end_time, sess_start_time, sess_end_time, unit_time_ms);\n\n                        /*let myChart = create_echarts_bar(\"thread_cpu_chart_\"+thread.id, ts_data);\n                        myChart.on('datazoom', function (evt) {\n                            var axis = myChart.getModel().option.xAxis[0];\n                            // var starttime = axis.data[axis.rangeStart];\n                            // var endtime = axis.data[axis.rangeEnd];\n                            let start_time = sess_start_time + axis.rangeStart*unit_time_ms;\n                            let end_time = sess_start_time + axis.rangeEnd*unit_time_ms;\n                            console.log(\"datazoom: thread:\",thread.id, \", index:\", axis.rangeStart,\"-\", axis.rangeEnd,\", time:\", start_time,\"-\", end_time );\n                            this.update_call_stack_tree([thread.id], start_time, end_time);\n                        })*/\n                    }\n                    //this.data.thread_cpu_time_map[thread.id] = thread;\n                }\n            },\n            active_session:function (session_id, type) {\n                this.clear_session();\n                this.data.session_id = session_id;\n                this.data.type = type;\n                this.start_auto_refresh();\n            },\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./samples.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./samples.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./samples.vue?vue&type=template&id=d0d7c94e&scoped=true&\"\nimport script from \"./samples.vue?vue&type=script&lang=js&\"\nexport * from \"./samples.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d0d7c94e\",\n  null\n  \n)\n\nexport default component.exports","require('../../modules/es6.array.is-array');\nmodule.exports = require('../../modules/_core').Array.isArray;\n"],"sourceRoot":""}