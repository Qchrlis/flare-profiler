{"version":3,"sources":["webpack:///./src/views/components/cpu.vue?fe6b","webpack:///src/views/components/cpu.vue","webpack:///./src/views/components/cpu.vue?b301","webpack:///./src/views/components/cpu.vue","webpack:///./src/views/components/cpu.vue?8251"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","id","_l","thread","index","class","selected","selected_thread_id","on","click","$event","select_thread","title","name","_v","_s","staticRenderFns","cpuvue_type_script_lang_js_","data","threads","computed","sampleInfo","$store","state","exampleInfo","sessionThreads","sessionId","$route","params","sessionInfo","sessionCpuTimes","mounted","on_cpu_time_result","created","getThreads","methods","thread_id","get","_this","sess_start_time","record_start_time","sess_end_time","last_record_time","unit_time_ms","_loop","i","total_cpu_time","ts_data","fill_ts_data","start_time","end_time","myChart","create_echarts_bar","evt","axis","getModel","option","xAxis","rangeStart","rangeEnd","console","log","update_call_stack_tree","length","request","cmd","options","session_id","$webSocket","webSocketSendMessage","JSON","stringify","elemId","echartsData","push","Math","random","toFixed","dataZoom","type","start","end","moveOnMouseMove","moveOnMouseWheel","zoomOnMouseWheel","dataBackground","lineStyle","color","opacity","areaStyle","realtime","filterMode","top","left","show","yAxis","series","large","largeThreshold","itemStyle","$echarts","init","document","getElementById","setOption","thread_ts_data","thread_start_time","thread_end_time","fill_steps_before","fill_steps_after","new_data_vec","concat","watch","to","from","_this2","components_cpuvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_cpu_vue_vue_type_style_index_0_id_ae811966_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_cpu_vue_vue_type_style_index_0_id_ae811966_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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","file":"static/js/chunk-a692d484.b062084b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"session\"},[_c('div',{attrs:{\"id\":\"cpu_time_content\"}},_vm._l((_vm.threads),function(thread,index){return _c('div',{staticClass:\"echarts_bar\",class:{selected: _vm.selected_thread_id == thread.id},on:{\"click\":function($event){return _vm.select_thread(thread.id)}}},[_c('div',{staticClass:\"thread_name\",attrs:{\"title\":thread.name}},[_vm._v(_vm._s(thread.name))]),_c('div',{staticClass:\"thread_bar\",attrs:{\"id\":'thread_cpu_chart_' + thread.id+''}})])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"session\">\n        <div id=\"cpu_time_content\">\n            <div v-for=\"thread,index in threads\" @click=\"select_thread(thread.id)\" class=\"echarts_bar\" :class=\"{selected: selected_thread_id == thread.id}\">\n                <div class=\"thread_name\" :title=\"thread.name\" >{{thread.name}}</div>\n                <div class=\"thread_bar\" v-bind:id=\"'thread_cpu_chart_' + thread.id+''\"></div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'cpu',\n        data() {\n            return {\n                threads: [],\n                selected_thread_id: null,\n            }\n        },\n        computed: {\n            sampleInfo() {\n                return this.$store.state.sampleInfo;\n            },\n            exampleInfo() {\n                return this.$store.state.exampleInfo;\n            },\n            sessionThreads() {\n                return this.$store.state.sessionThreads;\n            },\n            sessionId() {\n                return this.$route.params.sessionInfo;\n            },\n            sessionCpuTimes() {\n                return this.$store.state.sessionCpuTimes;\n            }\n        },\n        mounted(){\n            this.on_cpu_time_result();\n        },\n        created(){\n            this.getThreads();\n        },\n        methods: {\n            select_thread(thread_id) {\n                this.selected_thread_id = thread_id;\n            },\n            getThreads(){\n                this.threads = this.sessionThreads.get(this.sessionId);\n            },\n            on_cpu_time_result(){\n                let data = this.sessionCpuTimes.get(this.sessionId);\n                if (!data) {\n                    return false;\n                }\n                var sess_start_time = this.sampleInfo.record_start_time;\n                var sess_end_time = this.sampleInfo.last_record_time;\n                var unit_time_ms = this.sampleInfo.unit_time_ms;\n\n                for (let i = 0; i < data.length; i++) {\n                    let thread = data[i];\n                    if (thread.total_cpu_time > 0) {\n                        let ts_data = this.fill_ts_data(thread.ts_data, thread.start_time, thread.end_time, sess_start_time, sess_end_time, unit_time_ms);\n\n                        let myChart = this.create_echarts_bar(\"thread_cpu_chart_\"+thread.id, ts_data);\n                        myChart.on('datazoom', (evt) => {\n                            var axis = myChart.getModel().option.xAxis[0];\n                            // var starttime = axis.data[axis.rangeStart];\n                            // var endtime = axis.data[axis.rangeEnd];\n                            let start_time = sess_start_time + axis.rangeStart*unit_time_ms;\n                            let end_time = sess_start_time + axis.rangeEnd*unit_time_ms;\n                            console.log(\"datazoom: thread:\",thread.id, \", index:\", axis.rangeStart,\"-\", axis.rangeEnd,\", time:\", start_time,\"-\", end_time );\n                            this.update_call_stack_tree(thread.id, start_time, end_time);\n                        })\n                    }\n                    //profiler.data.thread_cpu_time_map[thread.id] = thread;\n                }\n            },\n            update_call_stack_tree(thread_id, start_time, end_time) {\n                var request = {\n                    \"cmd\": \"flame_graph\",\n                    \"options\": {\n                        \"session_id\": this.sessionId,\n                        \"thread_id\": thread_id,\n                        \"start_time\": start_time,\n                        \"end_time\": end_time\n                    }\n                };\n                this.$webSocket.webSocketSendMessage(JSON.stringify(request));\n            },\n            create_echarts_bar(elemId, echartsData) {\n                if (!echartsData) {\n                    echartsData = [];\n                    for (let i = 0; i < 3000; i++) {\n                        echartsData.push(Math.random().toFixed(2) * 1000);\n                    }\n                }\n\n                let options = {\n                    dataZoom: [{\n                        type: 'inside',\n                        start: 0,\n                        end: 10,\n                        moveOnMouseMove: false,\n                        moveOnMouseWheel: false,\n                        zoomOnMouseWheel: false\n                    }, {\n                        type: 'slider',\n                        //backgroundColor:'#cccccc',\n                        dataBackground: {\n                            lineStyle: {\n                                color: '#409eff',\n                                opacity: 1\n                            },\n                            areaStyle: {\n                                color: '#3a8ee6',\n                                opacity: 0.3\n                            }\n                        },\n                        realtime: false,\n                        filterMode: 'empty',\n                        top: 'top',\n                        left: 'left'\n                    }],\n                    xAxis: {\n                        data: echartsData,\n                        show: false\n                    },\n                    yAxis: {show: false},\n                    series: [{\n                        type: 'bar',//bar\n                        data: echartsData,\n                        large: true,\n                        largeThreshold: 50,\n                        itemStyle: {\n                            color: '#e74911', // bar颜色\n                            opacity: 0 // 透明度，0：不绘制\n                        }\n                    }]\n                }\n                let myChart = this.$echarts.init(document.getElementById(elemId));\n                myChart.setOption(options);\n\n                return myChart;\n            },\n            fill_ts_data(thread_ts_data, thread_start_time, thread_end_time, start_time, end_time, unit_time_ms) {\n                let fill_steps_before = (thread_start_time - start_time) / unit_time_ms;\n                let fill_steps_after = (end_time - thread_end_time) / unit_time_ms;\n                if (fill_steps_before < 1 && fill_steps_after < 1) {\n                    return thread_ts_data;\n                }\n\n                let new_data_vec = [];// Vec::with_capacity(data_vec.len()+(fill_steps_before+fill_steps_after) as usize);\n                for (var i = 0; i < fill_steps_before; i++) {\n                    new_data_vec.push(0);\n                }\n\n                new_data_vec = new_data_vec.concat(thread_ts_data);\n\n                for (var i = 0; i < fill_steps_after; i++) {\n                    new_data_vec.push(0);\n                }\n                return new_data_vec;\n            },\n        },\n        watch: {\n            '$route': (to, from) => {\n                this.on_cpu_time_result();\n                this.getThreads();\n            }\n        }\n    }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    .selected {\n        background-color: #c2e7b0;\n    }\n    .echarts_bar{\n        height: 30px;\n        width: 100%;\n        float: left;\n    }\n    .thread_name {\n        height: 30px;\n        line-height: 30px;\n        width: 30%;\n        margin-right: 5px;\n        float: left;\n        overflow: hidden;\n        text-overflow:ellipsis;\n        cursor: default;\n        word-break: break-all;\n    }\n    .thread_bar {\n        height: 30px;\n        width: 69%;\n        float: left;\n        /*color: #e74911;*/\n        overflow: hidden;\n    }\n    #cpu_time_content {\n        width: 100%;\n        height: 100%;\n        overflow-x: hidden;\n        overflow-y: auto;\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cpu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cpu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cpu.vue?vue&type=template&id=ae811966&scoped=true&\"\nimport script from \"./cpu.vue?vue&type=script&lang=js&\"\nexport * from \"./cpu.vue?vue&type=script&lang=js&\"\nimport style0 from \"./cpu.vue?vue&type=style&index=0&id=ae811966&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ae811966\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cpu.vue?vue&type=style&index=0&id=ae811966&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cpu.vue?vue&type=style&index=0&id=ae811966&scoped=true&lang=css&\""],"sourceRoot":""}