{"version":3,"sources":["webpack:///./src/views/components/call.vue?e196","webpack:///./src/views/components/call.vue?813e","webpack:///src/views/components/call.vue","webpack:///./src/views/components/call.vue?a434","webpack:///./src/views/components/call.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_call_vue_vue_type_style_index_0_id_476ed5ce_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_call_vue_vue_type_style_index_0_id_476ed5ce_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","expression","attrs","id","data","selectCpuRowArray","width","scopedSlots","_u","key","fn","scope","_v","_s","row","domProps","innerHTML","flame_graph_data","staticRenderFns","callvue_type_script_lang_js_","show_flame_graph","computed","sampleInfo","$store","state","exampleInfo","sessionId","$route","params","sessionInfo","sessionCpuTimes","sessionFlameGraph","historySamples","sessionTabsValue","selectCpuRow","mounted","_this","$nextTick","on_cpu_time_result","created","getFlameGraphData","methods","_this2","length","flareGrapList","filter","item","session_id","$router","push","path","cpuRowList","forEach","selectRow","_this3","cpuTimeArray","cpuTimeData","sess_start_time","record_start_time","sess_end_time","last_record_time","unit_time_ms","cpuInfo","thread","total_cpu_time","ts_data","fill_ts_data","start_time","end_time","myChart","create_echarts_bar","on","evt","axis","getModel","option","xAxis","rangeStart","rangeEnd","console","log","update_call_stack_tree","thread_id","request","cmd","options","$webSocket","webSocketSendMessage","JSON","stringify","elemId","echartsData","i","Math","random","toFixed","dataZoom","type","start","end","moveOnMouseMove","moveOnMouseWheel","zoomOnMouseWheel","dataBackground","lineStyle","color","opacity","areaStyle","realtime","filterMode","top","left","show","yAxis","series","large","largeThreshold","itemStyle","$echarts","init","document","getElementById","setOption","thread_ts_data","thread_start_time","thread_end_time","fill_steps_before","fill_steps_after","new_data_vec","concat","watch","to","from","_this4","_this5","components_callvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"static/js/chunk-3dcdd7c4.7e4f9929.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./call.vue?vue&type=style&index=0&id=476ed5ce&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./call.vue?vue&type=style&index=0&id=476ed5ce&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"session\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_flame_graph),expression:\"show_flame_graph\"}],attrs:{\"id\":\"flame_graph\"}},[_c('el-table',{attrs:{\"data\":_vm.selectCpuRowArray}},[_c('el-table-column',{attrs:{\"width\":\"400\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.row.name))])]}}])}),_c('el-table-column',{scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticClass:\"thread_bar\",attrs:{\"id\":'thread_select_cpu_chart_' + scope.row.id+''}})]}}])})],1),_c('div',{attrs:{\"id\":\"flame_graph_svg\"},domProps:{\"innerHTML\":_vm._s(_vm.flame_graph_data)}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"session\">\n        <div id=\"flame_graph\" v-show=\"show_flame_graph\">\n            <el-table :data=\"selectCpuRowArray\">\n                <el-table-column width=\"400\">\n                    <template slot-scope=\"scope\">\n                        <span>{{scope.row.name}}</span>\n                    </template>\n                </el-table-column>\n                <el-table-column>\n                    <template slot-scope=\"scope\">\n                        <div class=\"thread_bar\" v-bind:id=\"'thread_select_cpu_chart_' + scope.row.id+''\"></div>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <!--<h4 class=\"title\">Flame Graph</h4>-->\n            <div id=\"flame_graph_svg\" v-html=\"flame_graph_data\"></div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'call',\n        data() {\n            return {\n                show_flame_graph: true,\n                flame_graph_data: \"\",\n                selectCpuRowArray:[],\n            }\n        },\n        computed: {\n            sampleInfo() {\n                return this.$store.state.sampleInfo;\n            },\n            exampleInfo() {\n                return this.$store.state.exampleInfo;\n            },\n            sessionId() {\n                return this.$route.params.sessionInfo;\n            },\n            sessionCpuTimes() {\n                return this.$store.state.sessionCpuTimes;\n            },\n            sessionFlameGraph() {\n                return this.$store.state.sessionFlameGraph;\n            },\n            historySamples() {\n                return this.$store.state.historySamples;\n            },\n            sessionTabsValue() {\n                return this.$store.state.sessionTabsValue;\n            },\n            selectCpuRow() {\n                return this.$store.state.selectCpuRow;\n            },\n        },\n        mounted(){\n            this.$nextTick(()=>{\n                this.on_cpu_time_result();\n            })\n        },\n        created() {\n            this.getFlameGraphData();\n        },\n        methods: {\n            getFlameGraphData(){\n                if (!this.sessionFlameGraph && this.sessionFlameGraph.length > 0) {\n                    let flareGrapList = this.sessionFlameGraph.filter(item => {\n                        if (item.session_id == this.sessionId) {\n                            return item;\n                        }\n                    })\n                    if (flareGrapList.length > 0) {\n                        this.flame_graph_data = flareGrapList[0].flame_graph_data;\n                    }\n                }\n                if (this.historySamples.length <= 0) {\n                    this.$router.push({\n                        path:'/samples'\n                    });\n                }\n\n                let cpuRowList = this.selectCpuRow.filter(item => {\n                    if (item.sessionId == this.sessionId) {\n                        return item;\n                    }\n                })\n                cpuRowList.forEach(item => {\n                    this.selectCpuRowArray.push(item.selectRow)\n                })\n            },\n            on_cpu_time_result(){\n\n                let cpuTimeArray = this.sessionCpuTimes.filter(item => {\n                    if (item.sessionId == this.sessionId) {\n                        return item;\n                    }\n                })\n                if (cpuTimeArray.length <= 0 || this.selectCpuRowArray.length <= 0) {\n                    return false;\n                }\n                let data = cpuTimeArray[0].cpuTimeData;\n                if (!data) {\n                    return false;\n                }\n                var sess_start_time = this.sampleInfo.record_start_time;\n                var sess_end_time = this.sampleInfo.last_record_time;\n                var unit_time_ms = this.sampleInfo.unit_time_ms;\n\n                let cpuInfo = data.filter(item => {\n                    if (item.id == this.selectCpuRowArray[0].id) {\n                        return item;\n                    }\n                })\n\n                let thread = cpuInfo[0];\n                if (thread.total_cpu_time > 0) {\n                    let ts_data = this.fill_ts_data(thread.ts_data, thread.start_time, thread.end_time, sess_start_time, sess_end_time, unit_time_ms);\n\n                    let myChart = this.create_echarts_bar(\"thread_select_cpu_chart_\"+thread.id, ts_data);\n                    myChart.on('datazoom', (evt) => {\n                        var axis = myChart.getModel().option.xAxis[0];\n                        // var starttime = axis.data[axis.rangeStart];\n                        // var endtime = axis.data[axis.rangeEnd];\n                        let start_time = sess_start_time + axis.rangeStart*unit_time_ms;\n                        let end_time = sess_start_time + axis.rangeEnd*unit_time_ms;\n                        console.log(\"datazoom: thread:\",thread.id, \", index:\", axis.rangeStart,\"-\", axis.rangeEnd,\", time:\", start_time,\"-\", end_time );\n                        this.update_call_stack_tree(thread.id, start_time, end_time);\n                    })\n                }\n            },\n            update_call_stack_tree(thread_id, start_time, end_time) {\n                var request = {\n                    \"cmd\": \"flame_graph\",\n                    \"options\": {\n                        \"session_id\": this.sessionId,\n                        \"thread_id\": thread_id,\n                        \"start_time\": start_time,\n                        \"end_time\": end_time\n                    }\n                };\n                this.$webSocket.webSocketSendMessage(JSON.stringify(request));\n            },\n            create_echarts_bar(elemId, echartsData) {\n                if (!echartsData) {\n                    echartsData = [];\n                    for (let i = 0; i < 3000; i++) {\n                        echartsData.push(Math.random().toFixed(2) * 1000);\n                    }\n                }\n\n                let options = {\n                    dataZoom: [{\n                        type: 'inside',\n                        start: 0,\n                        end: 10,\n                        moveOnMouseMove: false,\n                        moveOnMouseWheel: false,\n                        zoomOnMouseWheel: false\n                    }, {\n                        type: 'slider',\n                        //backgroundColor:'#cccccc',\n                        dataBackground: {\n                            lineStyle: {\n                                color: '#409eff',\n                                opacity: 1\n                            },\n                            areaStyle: {\n                                color: '#3a8ee6',\n                                opacity: 0.3\n                            }\n                        },\n                        realtime: false,\n                        filterMode: 'empty',\n                        top: 'top',\n                        left: 'left'\n                    }],\n                    xAxis: {\n                        data: echartsData,\n                        show: false\n                    },\n                    yAxis: {show: false},\n                    series: [{\n                        type: 'bar',//bar\n                        data: echartsData,\n                        large: true,\n                        largeThreshold: 50,\n                        itemStyle: {\n                            color: '#e74911', // bar颜色\n                            opacity: 0 // 透明度，0：不绘制\n                        }\n                    }]\n                }\n                let myChart = this.$echarts.init(document.getElementById(elemId));\n                myChart.setOption(options);\n\n                return myChart;\n            },\n            fill_ts_data(thread_ts_data, thread_start_time, thread_end_time, start_time, end_time, unit_time_ms) {\n                let fill_steps_before = (thread_start_time - start_time) / unit_time_ms;\n                let fill_steps_after = (end_time - thread_end_time) / unit_time_ms;\n                if (fill_steps_before < 1 && fill_steps_after < 1) {\n                    return thread_ts_data;\n                }\n\n                let new_data_vec = [];// Vec::with_capacity(data_vec.len()+(fill_steps_before+fill_steps_after) as usize);\n                for (var i = 0; i < fill_steps_before; i++) {\n                    new_data_vec.push(0);\n                }\n\n                new_data_vec = new_data_vec.concat(thread_ts_data);\n\n                for (var i = 0; i < fill_steps_after; i++) {\n                    new_data_vec.push(0);\n                }\n                return new_data_vec;\n            },\n        },\n        watch: {\n            '$route': (to, from) => {\n                this.getFlameGraphData();\n            },\n            sessionFlameGraph() {\n                //this.getFlameGraphData();\n                if (this.sessionFlameGraph.length > 0) {\n                    let flareGrapList = this.sessionFlameGraph.filter(item => {\n                        if (item.session_id == this.sessionId) {\n                            return item;\n                        }\n                    })\n                    this.flame_graph_data = flareGrapList[0].flame_graph_data;\n                }\n            },\n        }\n    }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    .thread_bar {\n        height: 30px;\n        width: 100%;\n        float: left;\n        color: #e74911;\n        overflow: hidden;\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./call.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./call.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./call.vue?vue&type=template&id=476ed5ce&scoped=true&\"\nimport script from \"./call.vue?vue&type=script&lang=js&\"\nexport * from \"./call.vue?vue&type=script&lang=js&\"\nimport style0 from \"./call.vue?vue&type=style&index=0&id=476ed5ce&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"476ed5ce\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}